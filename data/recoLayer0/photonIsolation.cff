include "RecoEgamma/EgammaIsolationAlgos/data/egammaIsoDeposits.cff"

// selecting POG modules that can run on top of AOD
sequence gamIsoDepositAOD = { 
    gamIsoDepositTk,
    gamIsoDepositEcalFromClusts,      # on RECO you can use "gamIsoDepositEcalFromHits"
    #gamIsoDepositEcalSCVetoFromClust,# somebody may want this one 
    gamIsoDepositHcalFromTowers       # on RECO you can use "gamIsoDepositHcalFromHits"
}

// define module labels for old (tk-based isodeposit) POG isolation
block patAODPhotonIsolationLabels = {
    VInputTag associations = { 
       gamIsoDepositTk, 
       gamIsoDepositEcalFromClusts, 
       #gamIsoDepositEcalSCVetoFromClust, # somebody may want this one instead
       gamIsoDepositHcalFromTowers 
    }
}

// read and convert to ValueMap<IsoDeposit> keyed to Candidate
module patAODPhotonIsolations = MultipleIsoDepositsToValueMaps {
    InputTag  collection   = photons
    using patAODPhotonIsolationLabels
}

// sequence to run on AOD before 
sequence patAODPhotonIsolation = {
    #egammaSuperClusterMerger, egammaBasicClusterMerger, #already run for electrons
    gamIsoDepositAOD,
    patAODPhotonIsolations
}


module layer0PhotonIsolations = CandManyValueMapsSkimmerIsoDeposits {
    InputTag collection  =   allLayer0Photons
    InputTag backrefs    =   allLayer0Photons
    InputTag commonLabel   = patAODPhotonIsolations
    using patAODPhotonIsolationLabels
}

sequence patLayer0PhotonIsolation = {
    layer0PhotonIsolations
}

