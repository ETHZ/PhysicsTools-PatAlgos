// Need to convert all JetTags to ValueMap<JetTagRef>

block patBTaggingDiscriminatorLabels = {
    VInputTag associations = {
        combinedSecondaryVertexBJetTags,
        combinedSecondaryVertexMVABJetTags,
        coneIsolationTauJetTags,
        impactParameterMVABJetTags,
        jetBProbabilityBJetTags,
        jetProbabilityBJetTags,
        simpleSecondaryVertexBJetTags,
        softElectronBJetTags,
        softMuonBJetTags,
        softMuonNoIPBJetTags,
        trackCountingHighEffBJetTags,
        trackCountingHighPurBJetTags
    }
}
block patBTaggingTagInfoLabels = {
    VInputTag associations = {
        secondaryVertexTagInfos,
        softElectronTagInfos,
        softMuonTagInfos,
        impactParameterTagInfos
    }
}
module patAODBTags = MultipleDiscriminatorsToValueMaps {
    InputTag collection = iterativeCone5CaloJets   # jets to start with
    using patBTaggingDiscriminatorLabels           # use all the labels above
    untracked bool failSilently = true             # silently skip missing b-taggings
}

module patAODTagInfos = MultipleTagInfosToValueMaps {
    InputTag collection = iterativeCone5CaloJets
    using patBTaggingTagInfoLabels
    untracked bool failSilently = true             # silently skip missing b-taggings
}

sequence patAODBTagging = {
    patAODBTags,
    patAODTagInfos
}

module layer0BTags = CandManyValueMapsSkimmerFloat {
    InputTag collection = allLayer0Jets
    InputTag backrefs   = allLayer0Jets
    InputTag commonLabel = patAODBTags
    using patBTaggingDiscriminatorLabels
    untracked bool failSilently = true             # silently skip missing b-taggings
}

module layer0TagInfos =  CandManyValueMapsSkimmerTagInfo {
    InputTag collection = allLayer0Jets
    InputTag backrefs   = allLayer0Jets
    InputTag commonLabel = patAODTagInfos
    using patBTaggingTagInfoLabels
    untracked bool failSilently = true             # silently skip missing b-taggings
}

sequence patLayer0BTagging = {
    layer0BTags,
    layer0TagInfos
}

