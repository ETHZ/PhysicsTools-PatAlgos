module electronIdPTDR = EleIdCutBasedExtProducer {
  InputTag src = allLayer0Electrons
  InputTag barrelClusterShapeAssociation = hybridSuperClusters:hybridShapeAssoc
  InputTag endcapClusterShapeAssociation = islandBasicClusters:islandEndcapShapeAssoc
  include "RecoEgamma/ElectronIdentification/data/ptdrElectronId.cfi"
}

module electronIdCutBased = EleIdCutBasedExtProducer {
  InputTag src = allLayer0Electrons
  InputTag barrelClusterShapeAssociation = hybridSuperClusters:hybridShapeAssoc
  InputTag endcapClusterShapeAssociation = islandBasicClusters:islandEndcapShapeAssoc
  include "RecoEgamma/ElectronIdentification/data/cutBasedElectronId.cfi"
}

include "RecoEgamma/ElectronIdentification/data/likelihoodPdfsDB.cfi"
include "RecoEgamma/ElectronIdentification/data/likelihoodESetup.cfi"

module electronIdLikelihood = EleIdLikelihoodExtProducer {
  InputTag src = allLayer0Electrons
  InputTag barrelClusterShapeAssociation = hybridSuperClusters:hybridShapeAssoc
  InputTag endcapClusterShapeAssociation = islandBasicClusters:islandEndcapShapeAssoc
  bool doLikelihood = true
}

include "RecoEgamma/ElectronIdentification/data/neuralNetElectronId.cfi"
module electronIdNeuralNet = EleIdNeuralNetExtProducer {
  InputTag src = allLayer0Electrons
  InputTag barrelClusterShapeAssociation = hybridSuperClusters:hybridShapeAssoc
  InputTag endcapClusterShapeAssociation = islandBasicClusters:islandEndcapShapeAssoc
  using NeuralNet
  bool doNeuralNet = true
}


sequence patElectronId = {
  //electronIdPTDR, 
  electronIdCutBased, electronIdLikelihood, electronIdNeuralNet
}
