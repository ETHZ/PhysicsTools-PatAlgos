module allLayer0Photons = PATPhotonCleaner {
  InputTag photonSource     = photons

  string   removeDuplicates = "bySeed" 
  string   removeElectrons  = "bySeed" 
  InputTag electrons        = allLayer0Electrons

  bool    markItems    = true // write the status flags in the output items
  string  saveRejected = ""   // set this to a non empty label to save the list of items which fail
  string  saveAll      = ""   // set this to a non empty label to save a list of all items both passing and failing
  vstring bitsToIgnore = {    // You can specify some bit names, e.g. "Overflow/User1", 
        "Isolation/All"       //   "Core/Duplicate", "Isolation/All".
  }

  PSet isolation = {
     PSet tracker = {
        // input IsoDeposit
        InputTag src = patAODPhotonIsolations:gamIsoDepositTk
        // parameters to compute isolation (Egamma POG defaults)
        double  deltaR = 0.3
        vstring vetos = {"0.015",            # Inner DR Veto
                         "Threshold(1.0)"}   # Minimum Tk Pt
        bool skipDefaultVeto = true
        // cut value
        double  cut = 3
     }
     PSet ecal = { 
        // input IsoDeposit
        InputTag src = patAODPhotonIsolations:gamIsoDepositEcalFromClusts
        // parameters to compute isolation (Egamma POG defaults)
        double  deltaR = 0.4
        vstring vetos = { "EcalBarrel:0.045",   # inner cone veto (barrel, |eta| < 1.479)
                         "EcalEndcaps:0.070"  } # inner cone veto (endcaps, |eta| >= 1.479)
        bool skipDefaultVeto = true
        // cut value
        double  cut = 5
     }
     #other option, using eleIsoDepositEcalSCVetoFromClust
     #PSet ecal = { 
     #   // input IsoDeposit
     #   InputTag src = patAODPhotonIsolations:gamIsoDepositEcalFromClusts
     #   // parameters to compute isolation (Egamma POG defaults)
     #   double  deltaR = 0.4
     #   vstring vetos = {} # no veto, already done with SC
     #   bool skipDefaultVeto = true
     #   // cut value
     #   double  cut = 5
     #}
     PSet hcal = { 
        // input IsoDeposit
        InputTag src = patAODPhotonIsolations:gamIsoDepositHcalFromTowers
        // parameters to compute isolation (Egamma POG defaults)
        double deltaR = 0.4
        bool skipDefaultVeto = true # no inner cone veto
        // cut value
        double  cut = 5
     }
     VPSet user = { }
  }
  
}
