module allLayer0Electrons = PATElectronCleaner {
  InputTag electronSource    = pixelMatchGsfElectrons   # reco electron input source

  ### duplicate removal configurables
  bool     removeDuplicates  = true                     # switch on/off electron duplicate removal (1 SC with 2 tracks and vice versa)

  ### selection (e.g. ID)
  PSet     selection = { string type = "none" }

  ### isolation (not mandatory, see bitsToIgnore below)
  PSet isolation = {
     PSet tracker = {
        InputTag src = patAODElectronIsolations:egammaElectronTkIsolation
        double   cut = 2.0
     }
     #PSet hcal = { 
     #   InputTag src = patAODElectronIsolations:egammaHOE
     #   double   cut = 2.0
     #}
     #PSet ecal = { 
     #   InputTag src = patAODElectronIsolations:egammaEcalRelIsolation
     #   double   cut = 2.0
     #}
     #VPSet user = { 
     #   {  InputTag src = patAODElectronIsolations:egammaElectronTkNumIsolation
     #      double   cut = 2.0 }
     #}
  }

  bool    markItems    = true // write the status flags in the output items
  string  saveRejected = ""   // set this to a non empty label to save the list of items which fail
  string  saveAll      = ""   // set this to a non empty label to save a list of all items both passing and failing

  vstring bitsToIgnore = {    // You can specify some bit names, e.g. "Overflow/User1", "Core/Duplicate", "Isolation/All".
     "Isolation/All" # set isolation but don't reject non-isolated electrons
  }

  untracked bool wantSummary = true // print summary information for each status flag
}
