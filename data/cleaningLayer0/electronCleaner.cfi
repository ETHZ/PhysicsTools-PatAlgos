module allLayer0Electrons = PATElectronCleaner {
  InputTag electronSource    = pixelMatchGsfElectrons   # reco electron input source

  ### duplicate removal configurables
  bool     removeDuplicates  = true                     # switch on/off electron duplicate removal (1 SC with 2 tracks and vice versa)

  ### selection (e.g. ID)
  PSet     selection = { string type = "none" }

  ### isolation (not mandatory, see bitsToIgnore below)
  PSet isolation = {
     PSet tracker = {
        // input IsoDeposit
        InputTag src = patAODElectronIsolations:eleIsoDepositTk
        // parameters to compute isolation (Egamma POG defaults)
        double  deltaR = 0.3
        vstring vetos = {"0.015",            # Inner DR Veto
                         "Threshold(1.0)"}   # Minimum Tk Pt
        bool skipDefaultVeto = true
        // cut value
        double  cut = 3
     }
     PSet ecal = { 
        // input IsoDeposit
        InputTag src = patAODElectronIsolations:eleIsoDepositEcalFromClusts
        // parameters to compute isolation (Egamma POG defaults)
        double  deltaR = 0.4
        vstring vetos = {"EcalBarrel:0.040",                                      # Barrel (|eta| < 1.479)
                         "EcalBarrel:RectangularEtaPhiVeto(-0.01,0.01,-0.5,0.5)", # 
                        "EcalEndcaps:0.070",                                      # Endcaps
                        "EcalEndcaps:RectangularEtaPhiVeto(-0.02,0.02,-0.5,0.5)"} # 
        bool skipDefaultVeto = true
        // cut value
        double  cut = 5
     }
     #other option, using eleIsoDepositEcalSCVetoFromClust
     #PSet ecal = { 
     #   // input IsoDeposit
     #   InputTag src = patAODElectronIsolations:eleIsoDepositEcalFromClusts
     #   // parameters to compute isolation (Egamma POG defaults)
     #   double  deltaR = 0.4
     #   vstring vetos = {} # no veto, already done with SC
     #   bool skipDefaultVeto = true
     #   // cut value
     #   double  cut = 5
     #}
     PSet hcal = { 
        // input IsoDeposit
        InputTag src = patAODElectronIsolations:eleIsoDepositHcalFromTowers
        // parameters to compute isolation (Egamma POG defaults)
        double deltaR = 0.4
        bool skipDefaultVeto = true # no inner cone veto
        // cut value
        double  cut = 5
     }
     VPSet user = { }
  }

  PSet removeOverlaps = {
     // PSet muons = { // this might be useful to somebody
     //    InputTag collection = allLayer0Muons
     //    double   deltaR     = 0.3
     // }
  }

  bool    markItems    = true // write the status flags in the output items
  string  saveRejected = ""   // set this to a non empty label to save the list of items which fail
  string  saveAll      = ""   // set this to a non empty label to save a list of all items both passing and failing

  vstring bitsToIgnore = {    // You can specify some bit names, e.g. "Overflow/User1", "Core/Duplicate", "Isolation/All".
     "Isolation/All" # set isolation but don't reject non-isolated electrons
  }
}
