//
// Modules for smearing 4-vector's angles of Objects
//
// Parameters:
// - InputTag movedObject:
//   Specify object to smear. 
//   Object type should correspond to module (e.g. Electron in module ElectronSpatialResolution) 
// - bool useDefaultInitialResolutions :
//   Objects contain individual 4-vector resolutions (in terms of Et, theta/eta, phi).
//   Set this to "true" if these should be used to compute initial resolutions for the smearing.
// - bool usePolarTheta:
//   Switch to specify, if eta or rather theta is used for the polar angle smearing.
//   Set this to "true" to smear theta or to "false" to smear eta.
// - double initialResolutionPolar:
//   Initial resolution (in radiants for theta) to be used for the eta/theta smearing.
//   Is given as absolute value only, since factors make no sense for angles.
//   Overwritten, if 'useDefaultInitialResolution' is "true".
// - double worsenResolutionPolar:
//   Used to calculate the final resolution (after smearing) from the initial resolution.
//   The angle is smeared with a Gaussion of
//   mu    = angle and
//   sigma = sqrt(finalRes^2-iniRes^2).
// - bool worsenResolutionPolarByFactor:
//   Flags the usage mode of 'worsenResolutionPolar' (how the final resolution is calculated from the initial one)
// - double initialResolutionPhi, double worsenResolutionPhi and bool worsenResolutionPhiByFactor:
//   Accordingly...
//
// Examples:
//
// Remarks:
// - To switch off angular smearing, use (worsenResolutionPolar=0.) resp. (worsenResolutionPhi=0.)
// - All numeric values are protected from "meaninglessness" by the usage of absolute values only.
// - In the standard sequence at the bottom of this file, Taus are commented.
// - Keep polar smearing switched off for MET objects!!! ;-)
//
// Contact: volker.adler@cern.ch
//


// initialize random number generator
service = RandomNumberGeneratorService {
  untracked uint32 sourceSeed = 7893456
  // need one initializer for each module defined below
  PSet moduleSeeds = {
    untracked uint32 movedElectrons = 897867
    untracked uint32 movedMuons     = 17987
    untracked uint32 movedTaus      = 38476
    untracked uint32 movedJets      = 61587
    untracked uint32 movedMETs      = 3489766
  }
}

// Electrons
module movedElectrons = ElectronSpatialResolution {
  InputTag movedObject                   = selectedLayer1Electrons
  bool     useDefaultInitialResolutions  = false
  bool     usePolarTheta                 = true
  double   initialResolutionPolar        = 0.005
  double   worsenResolutionPolar         = 2.
  bool     worsenResolutionPolarByFactor = true
  double   initialResolutionPhi          = 0.
  double   worsenResolutionPhi           = 1.
  bool     worsenResolutionPhiByFactor   = true
}

// Muons
module movedMuons = MuonSpatialResolution {
  InputTag movedObject                   = selectedLayer1Muons
  bool     useDefaultInitialResolutions  = false
  bool     usePolarTheta                 = false
  double   initialResolutionPolar        = 0.005
  double   worsenResolutionPolar         = 2.
  bool     worsenResolutionPolarByFactor = true
  double   initialResolutionPhi          = 0.
  double   worsenResolutionPhi           = 1.
  bool     worsenResolutionPhiByFactor   = true
}

// Taus
module movedTaus = TauSpatialResolution {
  InputTag movedObject                   = selectedLayer1Taus
  bool     useDefaultInitialResolutions  = false
  bool     usePolarTheta                 = true
  double   initialResolutionPolar        = 0.
  double   worsenResolutionPolar         = 1.
  bool     worsenResolutionPolarByFactor = true
  double   initialResolutionPhi          = 0.
  double   worsenResolutionPhi           = 1.
  bool     worsenResolutionPhiByFactor   = true
}

// Jets
module movedJets = JetSpatialResolution {
  InputTag movedObject                   = selectedLayer1Jets
  bool     useDefaultInitialResolutions  = false
  bool     usePolarTheta                 = true
  double   initialResolutionPolar        = 0.1
  double   worsenResolutionPolar         = 0.25
  bool     worsenResolutionPolarByFactor = false
  double   initialResolutionPhi          = 0.
  double   worsenResolutionPhi           = 1.
  bool     worsenResolutionPhiByFactor   = true
}

// METs
module movedMETs = METSpatialResolution {
  InputTag movedObject                   = selectedLayer1METs
  bool     useDefaultInitialResolutions  = false
  bool     usePolarTheta                 = true
  double   initialResolutionPolar        = 0.
  double   worsenResolutionPolar         = 1.
  bool     worsenResolutionPolarByFactor = true
  double   initialResolutionPhi          = 0.8
  double   worsenResolutionPhi           = 1.6
  bool     worsenResolutionPhiByFactor   = false
}

// Standard sequence for all objects
sequence movedObjects = {
  movedElectrons &
  movedMuons &
//  movedTaus &
  movedJets &
  movedMETs
}
