#include "PhysicsTools/PatAlgos/interface/PATPhotonCleaner.h"

template<typename PhotonIn, typename PhotonOut>
pat::PATPhotonCleaner<PhotonIn,PhotonOut>::PATPhotonCleaner(const edm::ParameterSet & iConfig) :
  photonSrc_(iConfig.getParameter<edm::InputTag>( "photonSource" )),
  helper_(photonSrc_)
{
  // produces vector of electrons
  produces<std::vector<PhotonOut> >();

  // producers also backmatch to the electrons
  produces<reco::CandRefValueMap>();
}


template<typename PhotonIn, typename PhotonOut>
pat::PATPhotonCleaner<PhotonIn,PhotonOut>::~PATPhotonCleaner() {
}


template<typename PhotonIn, typename PhotonOut>
void pat::PATPhotonCleaner<PhotonIn,PhotonOut>::produce(edm::Event & iEvent, const edm::EventSetup & iSetup) {     
  // start a new event
  helper_.newEvent(iEvent);

  typedef typename edm::Ref< std::vector<PhotonIn> > PhotonInRef;
  for (size_t idx = 0, size = helper_.srcSize(); idx < size; ++idx) {
    // read the source photon
    const PhotonIn & srcPhoton = helper_.srcAt(idx);

    // clone the photon and convert it to the new type
    PhotonOut ourPhoton = static_cast<PhotonOut>(srcPhoton);

    // write the muon
    helper_.addItem(idx, ourPhoton);
  }

  helper_.done();
 
}

