process PAT = {


  ### General ###

  # initialize MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  replace MessageLogger.cerr.threshold = "INFO"

  # return filter & timing reports
  untracked PSet options = { untracked bool wantSummary = true }


  ### Input ###

  untracked PSet maxEvents = { untracked int32 input = 100 }

  source = PoolSource { untracked vstring fileNames = { } }
  include "PhysicsTools/PatAlgos/test/RelValTTbar.168.cff"


  ### PAT steering ###

  include "PhysicsTools/PatAlgos/data/PATLayer0.cff"
  include "PhysicsTools/PatAlgos/test/PATLayer0_ReplaceDefaults_full.cff"
  include "PhysicsTools/PatAlgos/data/PATLayer1.cff"
  include "PhysicsTools/PatAlgos/test/PATLayer1_ReplaceDefaults_full.cff"

  path p = {
    patLayer0,
    patLayer1
  }


  ### Output ###

  # define the event content
  block patEventContent = {
    untracked vstring outputCommands = {
      "drop *"
    }
  }
  include "PhysicsTools/PatAlgos/test/PATLayer1_EventContent.cff"
  replace patEventContent.outputCommands += patLayer1EventContent.outputCommands

  # only accept events passing the complete path
  block patEventSelection = {
    untracked PSet SelectEvents = {
      vstring SelectEvents = { "p" }
    }
  }

  # the actual output module
  module out = PoolOutputModule {
    untracked string fileName = "PATLayer1_Output.root"
    using patEventSelection
    using patEventContent
    untracked bool verbose = false
  }

  endpath outpath = { out }


}
